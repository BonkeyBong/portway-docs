Field:
  allOf:
    - $ref: '#/NewField'
    - required:
        - id
        - name
        - documentId
        - type
    - properties:
        id:
          type: integer
        name:
          type: string
        documentId:
          type: integer
        type:
          type: integer
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time

NewField:
  oneOf:
    - $ref: '#/StringField'
    - $ref: '#/TextField'
    - $ref: '#/NumberField'
    - $ref: '#/ImageField'
    - $ref: '#/DateField'
    - $ref: '#/FileField'

UpdateField:
  properties:
    name:
      type: string
    value:
      oneOf:
        - type: string
        - type: number

StringField:
  title: String
  required:
    - name
    - type
  properties:
    name:
      type: string
    type:
      type: integer
      enum: [1]
    value:
      type: string
    renderedValue:
      type: string
      description: HTML output of the field's value, for easy rendering

TextField:
  title: Text
  required:
    - name
    - type
  properties:
    name:
      type: string
    type:
      type: integer
      enum: [2]
    value:
      type: string
    renderedValue:
      type: string
      description: HTML output of the field's value, for easy rendering
    structuredValue:
      type: string

NumberField:
  title: Number
  required:
    - name
    - type
  properties:
    name:
      type: string
    type:
      type: integer
      enum: [3]
    value:
      type: number
      format: double
      description: Number value with maximum of 15 significant digits (including decimal digits).
        For longer numbers we recommend storing as a string and parsing the value in your code.
    renderedValue:
      type: string
      description: HTML output of the field's value, for easy rendering

ImageField:
  title: Image
  required:
    - name
    - type
  properties:
    name:
      type: string
    type:
      type: integer
      enum: [4]
    alignment:
      type: string
      description: Image alignment - left, center, or right
    alt:
      type: string
      description: Image alt text
    formats:
      type: object
      properties:
        original:
          type: object
          properties:
            full:
              type: string
              description: URL path to full size, original image source
            half:
              type: string
              description: URL path to half size, original image source
        webp:
          type: object
          properties:
            full:
              type: string
              description: URL path to full size, webp version of image
            half:
              type: string
              description: URL path to half size, webp version of image
    value:
      type: string
      description: Url of uploaded image
      example: 'https://www.google.com/test-image'
    renderedValue:
      type: string
      description: HTML output of the field's value, for easy rendering

DateField:
  title: Date
  required:
    - name
    - type
  properties:
    name:
      type: string
    type:
      type: integer
      enum: [5]
    value:
      type: string
      description: An ISO 8601 date string also supporting the RFC 3339 profile. Almost all libraries will output a compliant date string.
      example: '2020-01-03T14:30'
    renderedValue:
      type: string
      description: HTML output of the fieldâ€™s value, for easy rendering

FileField:
  title: File
  required:
    - name
    - type
  properties:
    name:
      type: string
    type:
      type: integer
      enum: [6]
    value:
      type: string
      description: Url of uploaded file
      example: 'https://www.example.com/notes.txt'
    renderedValue:
      type: string
      description: HTML output of the field's value, for easy rendering

FieldOrder:
  properties:
    order:
      type: integer
